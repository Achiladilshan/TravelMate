{"ast":null,"code":"var _jsxFileName = \"/Users/achiladilshan/Desktop/travelmate/client/src/pages/Maps.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { Paper, TextField } from \"@mui/material\";\nimport img from \"../assets/person-traveling-enjoying-their-vacation.webp\";\nimport ResponsiveAppBar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"AIzaSyCOuOGDld8dMKAsvn06Sfxk6l6GLfru4jo\"; // Replace 'YOUR_API_KEY' with your actual API key\n\nfunction App() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [selectedPlacePhotos, setSelectedPlacePhotos] = useState([]);\n  const [promptValue, setPromptValue] = useState(\"\");\n  const [placeName, setPlaceName] = useState(\"\");\n  const [placeRating, setPlaceRating] = useState(null);\n  const [contactNumber, setContactNumber] = useState(null);\n  useEffect(() => {\n    const loadMapScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.onload = initMap;\n      document.body.appendChild(script);\n    };\n    loadMapScript();\n    return () => {\n      // Clean up script tag\n      const script = document.querySelector('script[src^=\"https://maps.googleapis.com/maps/api/js\"]');\n      if (script) {\n        script.remove();\n      }\n    };\n  }, []);\n  const initMap = () => {\n    const mapInstance = new window.google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 14,\n      mapTypeId: \"roadmap\"\n    });\n    setMap(mapInstance);\n\n    // Try HTML5 geolocation to get the user's location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(pos);\n        mapInstance.setCenter(pos);\n      }, () => {\n        console.error(\"Error: The Geolocation service failed.\");\n      });\n    } else {\n      console.error(\"Error: Your browser doesn't support geolocation.\");\n    }\n\n    // Initialize autocomplete\n    const input = document.getElementById(\"searchTextField\");\n    const autocompleteInstance = new window.google.maps.places.Autocomplete(input);\n    autocompleteInstance.bindTo(\"bounds\", mapInstance);\n    setAutocomplete(autocompleteInstance);\n\n    // Add event listener for place selection\n    autocompleteInstance.addListener(\"place_changed\", () => {\n      const place = autocompleteInstance.getPlace();\n      if (!place.geometry || !place.geometry.location) {\n        console.error(\"No location found for place:\", place);\n        return;\n      }\n\n      // Clear existing markers\n      clearMarkers();\n\n      // Add marker for selected place\n      const marker = new window.google.maps.Marker({\n        map: mapInstance,\n        position: place.geometry.location,\n        title: place.name\n      });\n      setMarkers([...markers, marker]);\n\n      // Pan the map to the selected location\n      mapInstance.panTo(place.geometry.location);\n    });\n  };\n  const clearMarkers = () => {\n    // Clears all markers from the map\n    markers.forEach(marker => {\n      marker.setMap(null);\n    });\n    setMarkers([]);\n  };\n  const searchRestaurants = newResponse => {\n    // Clear existing markers\n    clearMarkers();\n    // Clear selected place details\n    clearSelectedPlaceDetails();\n    if (map && userLocation) {\n      const placesService = new window.google.maps.places.PlacesService(map);\n      placesService.nearbySearch({\n        location: userLocation,\n        radius: 5000,\n        // 500 meters radius\n        type: `${newResponse}`\n      }, (results, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          // Add new markers\n          for (let i = 0; i < Math.min(results.length, 10); i++) {\n            createMarker(results[i]);\n          }\n        } else {\n          console.error(\"Places service request failed:\", status);\n        }\n      });\n    }\n  };\n  const searchDetails = () => {\n    setSearch(promptValue);\n    aiRun();\n    // Clear image section\n    setSelectedPlacePhotos([]);\n    // Clear selected place details\n    clearSelectedPlaceDetails();\n  };\n  const clearSelectedPlaceDetails = () => {\n    setPlaceName(\"\");\n    setPlaceRating(null);\n    setContactNumber(null);\n  };\n  const showclg = v => {\n    console.log(v[0].key);\n    setNewResponse(v[0].key);\n  };\n  const [search, setSearch] = useState(\"\");\n  const [aiResponse, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [newResponse, setNewResponse] = useState(\"\");\n  const genAI = new GoogleGenerativeAI(\"AIzaSyAz6lyQmy_GCN9SBgQIyMP7fqXZiC47gT8\"); // Replace 'YOUR_GENERATIVE_AI_API_KEY' with your actual API key\n\n  async function aiRun() {\n    setLoading(true);\n    setResponse(\"\");\n    const model = genAI.getGenerativeModel({\n      model: \"gemini-pro\"\n    });\n    const prompt = `User\n    accounting\n    airport\n    amusement_park\n    aquarium\n    art_gallery\n    atm\n    bakery\n    bank\n    bar\n    beauty_salon\n    bicycle_store\n    book_store\n    bowling_alley\n    bus_station\n    cafe\n    campground\n    car_dealer\n    car_rental\n    car_repair\n    car_wash\n    casino\n    cemetery\n    church\n    city_hall\n    clothing_store\n    convenience_store\n    courthouse\n    dentist\n    department_store\n    doctor\n    drugstore\n    electrician\n    electronics_store\n    embassy\n    fire_station\n    florist\n    funeral_home\n    furniture_store\n    gas_station\n    gym\n    hair_care\n    hardware_store\n    hindu_temple\n    home_goods_store\n    hospital\n    insurance_agency\n    jewelry_store\n    laundry\n    lawyer\n    library\n    light_rail_station\n    liquor_store\n    local_government_office\n    locksmith\n    lodging\n    meal_delivery\n    meal_takeaway\n    mosque\n    movie_rental\n    movie_theater\n    moving_company\n    museum\n    night_club\n    painter\n    park\n    parking\n    pet_store\n    pharmacy\n    physiotherapist\n    plumber\n    police\n    post_office\n    primary_school\n    real_estate_agency\n    restaurant\n    roofing_contractor\n    rv_park\n    school\n    secondary_school\n    shoe_store\n    shopping_mall\n    spa\n    stadium\n    storage\n    store\n    subway_station\n    supermarket\n    synagogue\n    taxi_stand\n    tourist_attraction\n    train_station\n    transit_station\n    travel_agency\n    university\n    veterinary_care\n    zoo\n    \n    these are the keywords .now im entering some prompt.Read the prompt carefully and give me the most suitable keyword as the output.Only one keyword\n\n    prompt:${promptValue} \n    \n   `;\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text().replace(/\\*/g, \"\"); // Remove asterisks\n\n    // Split the response into individual place entries\n    const places = text.split(\"- \").filter(place => place.trim() !== \"\");\n\n    // line break\n    const formattedResponse = places.map(place => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [place.trim(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, place, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this));\n    setResponse(formattedResponse);\n    showclg(formattedResponse);\n    setLoading(false);\n  }\n  const createMarker = place => {\n    const marker = new window.google.maps.Marker({\n      map: map,\n      position: place.geometry.location,\n      title: place.name\n    });\n    marker.addListener(\"click\", () => {\n      getPlaceDetails(place.place_id);\n    });\n    setMarkers([...markers, marker]);\n  };\n  const getPlaceDetails = placeId => {\n    const placesService = new window.google.maps.places.PlacesService(map);\n    placesService.getDetails({\n      placeId: placeId\n    }, (place, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        // Display up to 5 photos of the place, if available\n        if (place.photos && place.photos.length > 0) {\n          setSelectedPlacePhotos(place.photos.slice(0, 3).map(photo => photo.getUrl()));\n        } else {\n          setSelectedPlacePhotos([]);\n        }\n\n        // Display rating\n        const rating = place.rating ? place.rating : \"N/A\";\n        setPlaceRating(rating);\n\n        // Display contact number\n        const contactNumber = place.formatted_phone_number ? place.formatted_phone_number : \"N/A\";\n        setContactNumber(contactNumber);\n\n        // Display place name\n        setPlaceName(place.name);\n      } else {\n        console.error(\"Place details request failed:\", status);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex w-full h-screen\",\n    style: {\n      backgroundImage: `url(${img})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveAppBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-4 flex flex-col gap-2\",\n          style: {\n            width: \"80%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              className: \"w-[84%]\",\n              id: \"outlined-basic\"\n              // label=\"Outlined\"\n              ,\n              variant: \"outlined\",\n              onChange: e => setPromptValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"rounded-lg w-[145px]\",\n              onClick: () => {\n                searchDetails();\n                searchRestaurants(newResponse);\n                console.log(newResponse);\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" flex flex-col gap-1 text-lg text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Catagory: \", aiResponse]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Place Name: \", placeName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Rating: \", placeRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Contact Number: \", contactNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 4,\n              sx: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                width: \"100%\",\n                height: \"440px\",\n                alignItems: \"end\",\n                borderRadius: \"10px\"\n              },\n              children: selectedPlacePhotos.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\"\n                },\n                children: selectedPlacePhotos.slice(0, 4).map((photoUrl, index) => /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 4,\n                  sx: {\n                    m: 1,\n                    height: \"360px\",\n                    borderRadius: 2,\n                    p: 1,\n                    width: \"220px\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\" // Center items vertically\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: photoUrl,\n                    alt: `Photo ${index + 1}`,\n                    style: {\n                      borderRadius: \"10px\",\n                      width: \"205px\",\n                      // Set width to one-third of container width\n                      marginRight: \"\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-4 my-4 rounded-lg\",\n        id: \"map\",\n        style: {\n          width: \"500px\",\n          marginBottom: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X/pQB0TuAF67tEArZqlemaNnUiw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoogleGenerativeAI","Paper","TextField","img","ResponsiveAppBar","jsxDEV","_jsxDEV","apiKey","App","_s","map","setMap","markers","setMarkers","autocomplete","setAutocomplete","userLocation","setUserLocation","selectedPlacePhotos","setSelectedPlacePhotos","promptValue","setPromptValue","placeName","setPlaceName","placeRating","setPlaceRating","contactNumber","setContactNumber","loadMapScript","script","document","createElement","src","async","onload","initMap","body","appendChild","querySelector","remove","mapInstance","window","google","maps","Map","getElementById","zoom","mapTypeId","navigator","geolocation","getCurrentPosition","position","pos","lat","coords","latitude","lng","longitude","setCenter","console","error","input","autocompleteInstance","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","location","clearMarkers","marker","Marker","title","name","panTo","forEach","searchRestaurants","newResponse","clearSelectedPlaceDetails","placesService","PlacesService","nearbySearch","radius","type","results","status","PlacesServiceStatus","OK","i","Math","min","length","createMarker","searchDetails","setSearch","aiRun","showclg","v","log","key","setNewResponse","search","aiResponse","setResponse","loading","setLoading","genAI","model","getGenerativeModel","prompt","result","generateContent","response","text","replace","split","filter","trim","formattedResponse","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","getPlaceDetails","place_id","placeId","getDetails","photos","slice","photo","getUrl","rating","formatted_phone_number","className","style","backgroundImage","backgroundSize","backgroundPosition","width","id","variant","onChange","e","target","value","onClick","display","flexDirection","elevation","sx","height","alignItems","borderRadius","photoUrl","index","m","p","alt","marginRight","marginBottom","_c","$RefreshReg$"],"sources":["/Users/achiladilshan/Desktop/travelmate/client/src/pages/Maps.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nimport { Paper, TextField } from \"@mui/material\";\nimport img from \"../assets/person-traveling-enjoying-their-vacation.webp\";\nimport ResponsiveAppBar from \"../components/Navbar\";\n\nconst apiKey = \"AIzaSyCOuOGDld8dMKAsvn06Sfxk6l6GLfru4jo\"; // Replace 'YOUR_API_KEY' with your actual API key\n\nfunction App() {\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [selectedPlacePhotos, setSelectedPlacePhotos] = useState([]);\n  const [promptValue, setPromptValue] = useState(\"\");\n  const [placeName, setPlaceName] = useState(\"\");\n  const [placeRating, setPlaceRating] = useState(null);\n  const [contactNumber, setContactNumber] = useState(null);\n\n  useEffect(() => {\n    const loadMapScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\n      script.async = true;\n      script.onload = initMap;\n      document.body.appendChild(script);\n    };\n\n    loadMapScript();\n\n    return () => {\n      // Clean up script tag\n      const script = document.querySelector(\n        'script[src^=\"https://maps.googleapis.com/maps/api/js\"]'\n      );\n      if (script) {\n        script.remove();\n      }\n    };\n  }, []);\n\n  const initMap = () => {\n    const mapInstance = new window.google.maps.Map(\n      document.getElementById(\"map\"),\n      {\n        zoom: 14,\n        mapTypeId: \"roadmap\",\n      }\n    );\n    setMap(mapInstance);\n\n    // Try HTML5 geolocation to get the user's location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          setUserLocation(pos);\n          mapInstance.setCenter(pos);\n        },\n        () => {\n          console.error(\"Error: The Geolocation service failed.\");\n        }\n      );\n    } else {\n      console.error(\"Error: Your browser doesn't support geolocation.\");\n    }\n\n    // Initialize autocomplete\n    const input = document.getElementById(\"searchTextField\");\n    const autocompleteInstance = new window.google.maps.places.Autocomplete(\n      input\n    );\n    autocompleteInstance.bindTo(\"bounds\", mapInstance);\n    setAutocomplete(autocompleteInstance);\n\n    // Add event listener for place selection\n    autocompleteInstance.addListener(\"place_changed\", () => {\n      const place = autocompleteInstance.getPlace();\n      if (!place.geometry || !place.geometry.location) {\n        console.error(\"No location found for place:\", place);\n        return;\n      }\n\n      // Clear existing markers\n      clearMarkers();\n\n      // Add marker for selected place\n      const marker = new window.google.maps.Marker({\n        map: mapInstance,\n        position: place.geometry.location,\n        title: place.name,\n      });\n      setMarkers([...markers, marker]);\n\n      // Pan the map to the selected location\n      mapInstance.panTo(place.geometry.location);\n    });\n  };\n\n  const clearMarkers = () => {\n    // Clears all markers from the map\n    markers.forEach((marker) => {\n      marker.setMap(null);\n    });\n    setMarkers([]);\n  };\n\n  const searchRestaurants = (newResponse) => {\n    // Clear existing markers\n    clearMarkers();\n    // Clear selected place details\n    clearSelectedPlaceDetails();\n\n    if (map && userLocation) {\n      const placesService = new window.google.maps.places.PlacesService(map);\n      placesService.nearbySearch(\n        {\n          location: userLocation,\n          radius: 5000, // 500 meters radius\n          type: `${newResponse}`,\n        },\n        (results, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            // Add new markers\n            for (let i = 0; i < Math.min(results.length, 10); i++) {\n              createMarker(results[i]);\n            }\n          } else {\n            console.error(\"Places service request failed:\", status);\n          }\n        }\n      );\n    }\n  };\n\n  const searchDetails = () => {\n    setSearch(promptValue);\n    aiRun();\n    // Clear image section\n    setSelectedPlacePhotos([]);\n    // Clear selected place details\n    clearSelectedPlaceDetails();\n  };\n\n  const clearSelectedPlaceDetails = () => {\n    setPlaceName(\"\");\n    setPlaceRating(null);\n    setContactNumber(null);\n  };\n\n  const showclg = (v) => {\n    console.log(v[0].key);\n    setNewResponse(v[0].key);\n  };\n\n  const [search, setSearch] = useState(\"\");\n  const [aiResponse, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [newResponse, setNewResponse] = useState(\"\");\n  const genAI = new GoogleGenerativeAI(\n    \"AIzaSyAz6lyQmy_GCN9SBgQIyMP7fqXZiC47gT8\"\n  ); // Replace 'YOUR_GENERATIVE_AI_API_KEY' with your actual API key\n\n  async function aiRun() {\n    setLoading(true);\n    setResponse(\"\");\n    const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n    const prompt = `User\n    accounting\n    airport\n    amusement_park\n    aquarium\n    art_gallery\n    atm\n    bakery\n    bank\n    bar\n    beauty_salon\n    bicycle_store\n    book_store\n    bowling_alley\n    bus_station\n    cafe\n    campground\n    car_dealer\n    car_rental\n    car_repair\n    car_wash\n    casino\n    cemetery\n    church\n    city_hall\n    clothing_store\n    convenience_store\n    courthouse\n    dentist\n    department_store\n    doctor\n    drugstore\n    electrician\n    electronics_store\n    embassy\n    fire_station\n    florist\n    funeral_home\n    furniture_store\n    gas_station\n    gym\n    hair_care\n    hardware_store\n    hindu_temple\n    home_goods_store\n    hospital\n    insurance_agency\n    jewelry_store\n    laundry\n    lawyer\n    library\n    light_rail_station\n    liquor_store\n    local_government_office\n    locksmith\n    lodging\n    meal_delivery\n    meal_takeaway\n    mosque\n    movie_rental\n    movie_theater\n    moving_company\n    museum\n    night_club\n    painter\n    park\n    parking\n    pet_store\n    pharmacy\n    physiotherapist\n    plumber\n    police\n    post_office\n    primary_school\n    real_estate_agency\n    restaurant\n    roofing_contractor\n    rv_park\n    school\n    secondary_school\n    shoe_store\n    shopping_mall\n    spa\n    stadium\n    storage\n    store\n    subway_station\n    supermarket\n    synagogue\n    taxi_stand\n    tourist_attraction\n    train_station\n    transit_station\n    travel_agency\n    university\n    veterinary_care\n    zoo\n    \n    these are the keywords .now im entering some prompt.Read the prompt carefully and give me the most suitable keyword as the output.Only one keyword\n\n    prompt:${promptValue} \n    \n   `;\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n\n    const text = response.text().replace(/\\*/g, \"\"); // Remove asterisks\n\n    // Split the response into individual place entries\n    const places = text.split(\"- \").filter((place) => place.trim() !== \"\");\n\n    // line break\n    const formattedResponse = places.map((place) => (\n      <React.Fragment key={place}>\n        {place.trim()}\n        <br />\n      </React.Fragment>\n    ));\n    setResponse(formattedResponse);\n\n    showclg(formattedResponse);\n    setLoading(false);\n  }\n\n  const createMarker = (place) => {\n    const marker = new window.google.maps.Marker({\n      map: map,\n      position: place.geometry.location,\n      title: place.name,\n    });\n    marker.addListener(\"click\", () => {\n      getPlaceDetails(place.place_id);\n    });\n    setMarkers([...markers, marker]);\n  };\n\n  const getPlaceDetails = (placeId) => {\n    const placesService = new window.google.maps.places.PlacesService(map);\n    placesService.getDetails({ placeId: placeId }, (place, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        // Display up to 5 photos of the place, if available\n        if (place.photos && place.photos.length > 0) {\n          setSelectedPlacePhotos(\n            place.photos.slice(0, 3).map((photo) => photo.getUrl())\n          );\n        } else {\n          setSelectedPlacePhotos([]);\n        }\n\n        // Display rating\n        const rating = place.rating ? place.rating : \"N/A\";\n        setPlaceRating(rating);\n\n        // Display contact number\n        const contactNumber = place.formatted_phone_number\n          ? place.formatted_phone_number\n          : \"N/A\";\n        setContactNumber(contactNumber);\n\n        // Display place name\n        setPlaceName(place.name);\n      } else {\n        console.error(\"Place details request failed:\", status);\n      }\n    });\n  };\n\n  return (\n    <div\n      className=\"flex w-full h-screen\"\n      style={{\n        backgroundImage: `url(${img})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <div className=\"flex-col w-full\">\n        <div className=\"p-6\">\n          <ResponsiveAppBar />\n        </div>\n        <div className=\"flex\">\n        <div className=\"m-4 flex flex-col gap-2\" style={{ width: \"80%\" }}>\n          <div className=\"flex gap-3\">\n            <TextField\n              className=\"w-[84%]\"\n              id=\"outlined-basic\"\n              // label=\"Outlined\"\n              variant=\"outlined\"\n              onChange={(e) => setPromptValue(e.target.value)}\n            />\n\n            <button\n              className=\"rounded-lg w-[145px]\"\n              onClick={() => {\n                searchDetails();\n                searchRestaurants(newResponse);\n                console.log(newResponse);\n              }}\n            >\n              Search\n            </button>\n          </div>\n          <div className=\" flex flex-col gap-1 text-lg text-white\">\n            <div>Catagory: {aiResponse}</div>\n            <div>Place Name: {placeName}</div>\n            <div>Rating: {placeRating}</div>\n            <div>Contact Number: {contactNumber}</div>\n          </div>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <Paper\n              elevation={4}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                width: \"100%\",\n                height: \"440px\",\n                alignItems: \"end\",\n                borderRadius: \"10px\",\n              }}\n            >\n              {/* <h1\n                className=\"text-5xl items-center\"\n                style={{\n                  position: \"absolute\",\n                  top: \"8%\",\n                  left: \"36%\",\n                  color: \"#a1b2c3\",\n                }}\n              >\n                Images\n              </h1> */}\n              {selectedPlacePhotos.length > 0 && (\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                  {selectedPlacePhotos.slice(0, 4).map((photoUrl, index) => (\n                    <Paper\n                      key={index}\n                      elevation={4}\n                      sx={{\n                        m: 1,\n                        height: \"360px\",\n                        borderRadius: 2,\n                        p: 1,\n                        width: \"220px\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        alignItems: \"center\", // Center items vertically\n                      }}\n                    >\n                      <img\n                        src={photoUrl}\n                        alt={`Photo ${index + 1}`}\n                        style={{\n                          borderRadius: \"10px\",\n                          width: \"205px\", // Set width to one-third of container width\n                          marginRight: \"\",\n                        }}\n                      />\n                    </Paper>\n                  ))}\n                </div>\n              )}\n            </Paper>\n          </div>\n      </div>\n      </div>\n\n      <div className=\"mr-4 my-4 rounded-lg\"\n        id=\"map\"\n        style={{ width: \"500px\", marginBottom: \"20px\" }}\n      ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}