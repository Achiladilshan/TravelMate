{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nvar RouteOverview_1;\nimport { __decorate, __metadata } from \"tslib\";\nimport '../route_building_blocks/route_data_provider/route_data_provider.js';\nimport '../route_building_blocks/route_polyline/route_polyline.js';\nimport '../route_building_blocks/route_marker/route_marker.js';\nimport { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\nimport { BaseComponent } from '../base/base_component.js';\nimport { LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER } from '../utils/attribute_converters.js';\nconst INNER_POLYLINE_BLUE = '#1faefb';\nconst OUTER_POLYLINE_BLUE = '#2565cd';\n/**\n * The route overview component renders a route on a `<gmp-map>` component,\n * including origin and destination markers, an outlined polyline, and viewport\n * management.\n *\n * This component can fetch route data from the Directions API, or use a\n * `DirectionsRoute` object provided from elsewhere in code. The component will\n * locally cache route data to avoid redundant API requests.\n *\n * @event {RequestErrorEvent} gmpx-requesterror - Indicates an error condition\n * in an underlying Google Maps JavaScript API call. (React: onRequestError)\n */\nlet RouteOverview = RouteOverview_1 = class RouteOverview extends BaseComponent {\n  constructor() {\n    super();\n    /**\n     * The travel mode of the directions request.\n     */\n    this.travelMode = 'driving';\n    /**\n     * Hides the red pin displayed at the destination.\n     */\n    this.noPin = false;\n    this.zIndex = 10 * RouteOverview_1.numConstructed++;\n  }\n  render() {\n    // clang-format off\n    return html`\n      <gmpx-route-data-provider\n          .destinationLatLng=${this.destinationLatLng}\n          .destinationPlaceId=${this.destinationPlaceId}\n          .destinationAddress=${this.destinationAddress}\n          .originLatLng=${this.originLatLng}\n          .originPlaceId=${this.originPlaceId}\n          .originAddress=${this.originAddress}\n          .route=${this.route}\n          .travelMode=${this.travelMode}>\n        <gmpx-route-polyline\n            fit-in-viewport\n            stroke-color=\"${OUTER_POLYLINE_BLUE}\"\n            stroke-weight=\"9\"\n            .zIndex=${this.zIndex}>\n        </gmpx-route-polyline>\n        <gmpx-route-polyline\n            stroke-color=\"${INNER_POLYLINE_BLUE}\"\n            stroke-weight=\"5\"\n            .zIndex=${this.zIndex + 1}>\n        </gmpx-route-polyline>\n        <gmpx-route-marker\n            waypoint=\"origin\"\n            .title=${this.originAddress ?? ''}\n            .zIndex=${this.zIndex}>\n          <svg width=\"20\" height=\"20\" style=\"position: relative; top: 13px;\">\n            <circle cx=\"10\" cy=\"10\" r=\"6\" stroke=\"black\" stroke-width=\"3\" \n                fill=\"white\"/>\n          </svg>\n        </gmpx-route-marker>\n        <gmpx-route-marker\n            waypoint=\"destination\"\n            .title=${this.destinationAddress ?? ''}\n            .zIndex=${this.zIndex + 1}>\n          <svg width=\"20\" height=\"20\" style=\"position: relative; top: 13px;\">\n            <circle cx=\"10\" cy=\"10\" r=\"7\" stroke=\"black\" stroke-width=\"3\" \n                fill=\"white\"/>\n            <circle cx=\"10\" cy=\"10\" r=\"1.8\" stroke=\"black\" stroke-width=\"3\" \n                fill=\"black\"/>\n          </svg>\n        </gmpx-route-marker>\n        ${when(!this.noPin, () => html`\n          <gmpx-route-marker\n              waypoint=\"destination\"\n              .title=${this.destinationAddress ?? ''}\n              .zIndex=${this.zIndex + 2}>\n          </gmpx-route-marker>`)}\n      </gmpx-route-data-provider>\n    `;\n    // clang-format on\n  }\n};\nRouteOverview.numConstructed = 0;\n__decorate([property({\n  converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\n  attribute: 'destination-lat-lng',\n  reflect: true\n}), __metadata(\"design:type\", Object)], RouteOverview.prototype, \"destinationLatLng\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'destination-place-id',\n  reflect: true\n}), __metadata(\"design:type\", String)], RouteOverview.prototype, \"destinationPlaceId\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'destination-address',\n  reflect: true\n}), __metadata(\"design:type\", String)], RouteOverview.prototype, \"destinationAddress\", void 0);\n__decorate([property({\n  converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\n  attribute: 'origin-lat-lng',\n  reflect: true\n}), __metadata(\"design:type\", Object)], RouteOverview.prototype, \"originLatLng\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'origin-place-id',\n  reflect: true\n}), __metadata(\"design:type\", String)], RouteOverview.prototype, \"originPlaceId\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'origin-address',\n  reflect: true\n}), __metadata(\"design:type\", String)], RouteOverview.prototype, \"originAddress\", void 0);\n__decorate([property({\n  attribute: false\n}), __metadata(\"design:type\", Object)], RouteOverview.prototype, \"route\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'travel-mode',\n  reflect: true\n}), __metadata(\"design:type\", Object)], RouteOverview.prototype, \"travelMode\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'no-pin',\n  reflect: true\n}), __metadata(\"design:type\", Object)], RouteOverview.prototype, \"noPin\", void 0);\nRouteOverview = RouteOverview_1 = __decorate([customElement('gmpx-route-overview'), __metadata(\"design:paramtypes\", [])], RouteOverview);\nexport { RouteOverview };","map":{"version":3,"names":["html","customElement","property","when","BaseComponent","LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER","INNER_POLYLINE_BLUE","OUTER_POLYLINE_BLUE","RouteOverview","RouteOverview_1","constructor","travelMode","noPin","zIndex","numConstructed","render","destinationLatLng","destinationPlaceId","destinationAddress","originLatLng","originPlaceId","originAddress","route","__decorate","converter","attribute","reflect","type","String","Boolean"],"sources":["/Users/achiladilshan/Desktop/travelmate/client/node_modules/@googlemaps/extended-component-library/src/route_overview/route_overview.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../route_building_blocks/route_data_provider/route_data_provider.js';\nimport '../route_building_blocks/route_polyline/route_polyline.js';\nimport '../route_building_blocks/route_marker/route_marker.js';\n\nimport {html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {when} from 'lit/directives/when.js';\n\nimport {BaseComponent} from '../base/base_component.js';\nimport {LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER} from '../utils/attribute_converters.js';\n\ntype DirectionsRoute = google.maps.DirectionsRoute;\ntype LatLng = google.maps.LatLng;\ntype LatLngLiteral = google.maps.LatLngLiteral;\n\nconst INNER_POLYLINE_BLUE = '#1faefb';\nconst OUTER_POLYLINE_BLUE = '#2565cd';\n\n/**\n * The route overview component renders a route on a `<gmp-map>` component,\n * including origin and destination markers, an outlined polyline, and viewport\n * management.\n *\n * This component can fetch route data from the Directions API, or use a\n * `DirectionsRoute` object provided from elsewhere in code. The component will\n * locally cache route data to avoid redundant API requests.\n *\n * @event {RequestErrorEvent} gmpx-requesterror - Indicates an error condition\n * in an underlying Google Maps JavaScript API call. (React: onRequestError)\n */\n@customElement('gmpx-route-overview')\nexport class RouteOverview extends BaseComponent {\n  /**\n   * The destination of the directions request as a lat/lng. When setting the\n   * destination, only one of lat/lng, Place ID, or address should be specified.\n   */\n  @property({\n    converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\n    attribute: 'destination-lat-lng',\n    reflect: true\n  })\n  destinationLatLng?: LatLng|LatLngLiteral;\n\n  /**\n   * The destination of the directions request as a Place ID. When setting the\n   * destination, only one of lat/lng, Place ID, or address should be specified.\n   */\n  @property({type: String, attribute: 'destination-place-id', reflect: true})\n  destinationPlaceId?: string;\n\n  /**\n   * The destination of the directions request as an address query. When setting\n   * the destination, only one of lat/lng, Place ID, or address should be\n   * specified.\n   */\n  @property({type: String, attribute: 'destination-address', reflect: true})\n  destinationAddress?: string;\n\n  /**\n   * The origin of the directions request as a lat/lng. When setting the origin,\n   * only one of lat/lng, Place ID, or address should be specified.\n   */\n  @property({\n    converter: LAT_LNG_LITERAL_ATTRIBUTE_CONVERTER,\n    attribute: 'origin-lat-lng',\n    reflect: true\n  })\n  originLatLng?: LatLng|LatLngLiteral;\n\n  /**\n   * The origin of the directions request as a Place ID. When setting the\n   * origin, only one of lat/lng, Place ID, or address should be specified.\n   */\n  @property({type: String, attribute: 'origin-place-id', reflect: true})\n  originPlaceId?: string;\n\n  /**\n   * The origin of the directions request as an address query. When setting the\n   * origin, only one of lat/lng, Place ID, or address should be specified.\n   */\n  @property({type: String, attribute: 'origin-address', reflect: true})\n  originAddress?: string;\n\n  /**\n   * Route data to render directly, instead of making an API call.\n   */\n  @property({attribute: false}) route?: DirectionsRoute;\n\n  /**\n   * The travel mode of the directions request.\n   */\n  @property({type: String, attribute: 'travel-mode', reflect: true})\n  travelMode: Lowercase<google.maps.TravelMode> = 'driving';\n\n  /**\n   * Hides the red pin displayed at the destination.\n   */\n  @property({type: Boolean, attribute: 'no-pin', reflect: true}) noPin = false;\n\n  private static numConstructed = 0;\n\n  private readonly zIndex: number;\n\n  constructor() {\n    super();\n    this.zIndex = 10 * RouteOverview.numConstructed++;\n  }\n\n  protected override render() {\n    // clang-format off\n    return html`\n      <gmpx-route-data-provider\n          .destinationLatLng=${this.destinationLatLng}\n          .destinationPlaceId=${this.destinationPlaceId}\n          .destinationAddress=${this.destinationAddress}\n          .originLatLng=${this.originLatLng}\n          .originPlaceId=${this.originPlaceId}\n          .originAddress=${this.originAddress}\n          .route=${this.route}\n          .travelMode=${this.travelMode}>\n        <gmpx-route-polyline\n            fit-in-viewport\n            stroke-color=\"${OUTER_POLYLINE_BLUE}\"\n            stroke-weight=\"9\"\n            .zIndex=${this.zIndex}>\n        </gmpx-route-polyline>\n        <gmpx-route-polyline\n            stroke-color=\"${INNER_POLYLINE_BLUE}\"\n            stroke-weight=\"5\"\n            .zIndex=${this.zIndex + 1}>\n        </gmpx-route-polyline>\n        <gmpx-route-marker\n            waypoint=\"origin\"\n            .title=${this.originAddress ?? ''}\n            .zIndex=${this.zIndex}>\n          <svg width=\"20\" height=\"20\" style=\"position: relative; top: 13px;\">\n            <circle cx=\"10\" cy=\"10\" r=\"6\" stroke=\"black\" stroke-width=\"3\" \n                fill=\"white\"/>\n          </svg>\n        </gmpx-route-marker>\n        <gmpx-route-marker\n            waypoint=\"destination\"\n            .title=${this.destinationAddress ?? ''}\n            .zIndex=${this.zIndex + 1}>\n          <svg width=\"20\" height=\"20\" style=\"position: relative; top: 13px;\">\n            <circle cx=\"10\" cy=\"10\" r=\"7\" stroke=\"black\" stroke-width=\"3\" \n                fill=\"white\"/>\n            <circle cx=\"10\" cy=\"10\" r=\"1.8\" stroke=\"black\" stroke-width=\"3\" \n                fill=\"black\"/>\n          </svg>\n        </gmpx-route-marker>\n        ${when(!this.noPin, () => html`\n          <gmpx-route-marker\n              waypoint=\"destination\"\n              .title=${this.destinationAddress ?? ''}\n              .zIndex=${this.zIndex + 2}>\n          </gmpx-route-marker>`)}\n      </gmpx-route-data-provider>\n    `;\n    // clang-format on\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gmpx-route-overview': RouteOverview;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}