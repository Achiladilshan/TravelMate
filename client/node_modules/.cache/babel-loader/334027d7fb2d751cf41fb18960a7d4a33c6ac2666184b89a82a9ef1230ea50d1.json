{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate } from \"tslib\";\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { join } from 'lit/directives/join.js';\nimport { map } from 'lit/directives/map.js';\nimport { renderAttribution } from '../../utils/place_utils.js';\nimport { PlaceDataConsumer } from '../place_data_consumer.js';\n/**\n * Component that renders any listing attributions from the Places API.\n *\n * When displaying data from the Places API, you are [required to\n * display](https://developers.google.com/maps/documentation/places/web-service/policies#other_attribution_requirements)\n * any attributions present in the response. This component assists in rendering\n * these listing attributions from a `Place` or `PlaceResult` object.\n *\n * The Place Data Provider component will automatically insert a Place\n * Attribution component if you do not include one. Please note that failure to\n * display this component can result in a violation of the Google Maps Platform\n * Terms Of Service.\n */\nlet PlaceAttribution = class PlaceAttribution extends PlaceDataConsumer {\n  render() {\n    const place = this.getPlace();\n    if (!(place && this.placeHasData(place))) {\n      return html``;\n    }\n    const attributions = place.attributions || [];\n    return html`${join(map(attributions, this.makeAttributionHTML), html`<span class=\"sep\">, </span>`)}`;\n  }\n  /** @ignore */\n  getRequiredFields() {\n    return ['attributions'];\n  }\n  placeHasData(place) {\n    return !!(place.attributions && place.attributions.length > 0);\n  }\n  makeAttributionHTML(attribution) {\n    return renderAttribution(attribution.provider, attribution.providerURI);\n  }\n};\nPlaceAttribution.styles = css`\n    a {\n      color: inherit;\n      text-decoration: inherit;\n    }\n\n    a:hover {\n      text-decoration: underline;\n    }\n  `;\nPlaceAttribution = __decorate([customElement('gmpx-place-attribution')], PlaceAttribution);\nexport { PlaceAttribution };","map":{"version":3,"names":["css","html","customElement","join","map","renderAttribution","PlaceDataConsumer","PlaceAttribution","render","place","getPlace","placeHasData","attributions","makeAttributionHTML","getRequiredFields","length","attribution","provider","providerURI","styles","__decorate"],"sources":["/Users/achiladilshan/Desktop/travelmate/client/node_modules/@googlemaps/extended-component-library/src/place_building_blocks/place_attribution/place_attribution.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {css, html, TemplateResult} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport {join} from 'lit/directives/join.js';\nimport {map} from 'lit/directives/map.js';\n\nimport type {Place} from '../../utils/googlemaps_types.js';\nimport {renderAttribution} from '../../utils/place_utils.js';\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\n\ntype Attribution = google.maps.places.Attribution;\n\n\n/**\n * Component that renders any listing attributions from the Places API.\n *\n * When displaying data from the Places API, you are [required to\n * display](https://developers.google.com/maps/documentation/places/web-service/policies#other_attribution_requirements)\n * any attributions present in the response. This component assists in rendering\n * these listing attributions from a `Place` or `PlaceResult` object.\n *\n * The Place Data Provider component will automatically insert a Place\n * Attribution component if you do not include one. Please note that failure to\n * display this component can result in a violation of the Google Maps Platform\n * Terms Of Service.\n */\n@customElement('gmpx-place-attribution')\nexport class PlaceAttribution extends PlaceDataConsumer {\n  static override styles = css`\n    a {\n      color: inherit;\n      text-decoration: inherit;\n    }\n\n    a:hover {\n      text-decoration: underline;\n    }\n  `;\n\n  protected override render() {\n    const place = this.getPlace();\n    if (!(place && this.placeHasData(place))) {\n      return html``;\n    }\n    const attributions = place.attributions || [];\n    return html`${\n        join(\n            map(attributions, this.makeAttributionHTML),\n            html`<span class=\"sep\">, </span>`)}`;\n  }\n\n  /** @ignore */\n  getRequiredFields(): Array<keyof Place> {\n    return ['attributions'];\n  }\n\n  protected override placeHasData(place: Place): boolean {\n    return !!(place.attributions && place.attributions.length > 0);\n  }\n\n  private makeAttributionHTML(attribution: Attribution): TemplateResult<1> {\n    return renderAttribution(attribution.provider!, attribution.providerURI);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gmpx-place-attribution': PlaceAttribution;\n  }\n}\n"],"mappings":"AAAA;;;;;;AAMA,SAAQA,GAAG,EAAEC,IAAI,QAAuB,KAAK;AAC7C,SAAQC,aAAa,QAAO,mBAAmB;AAC/C,SAAQC,IAAI,QAAO,wBAAwB;AAC3C,SAAQC,GAAG,QAAO,uBAAuB;AAGzC,SAAQC,iBAAiB,QAAO,4BAA4B;AAC5D,SAAQC,iBAAiB,QAAO,2BAA2B;AAK3D;;;;;;;;;;;;;AAcO,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAiB,SAAQD,iBAAiB;EAYlCE,MAAMA,CAAA;IACvB,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;IAC7B,IAAI,EAAED,KAAK,IAAI,IAAI,CAACE,YAAY,CAACF,KAAK,CAAC,CAAC,EAAE;MACxC,OAAOR,IAAI,EAAE;;IAEf,MAAMW,YAAY,GAAGH,KAAK,CAACG,YAAY,IAAI,EAAE;IAC7C,OAAOX,IAAI,GACPE,IAAI,CACAC,GAAG,CAACQ,YAAY,EAAE,IAAI,CAACC,mBAAmB,CAAC,EAC3CZ,IAAI,6BAA6B,CAAC,EAAE;EAC9C;EAEA;EACAa,iBAAiBA,CAAA;IACf,OAAO,CAAC,cAAc,CAAC;EACzB;EAEmBH,YAAYA,CAACF,KAAY;IAC1C,OAAO,CAAC,EAAEA,KAAK,CAACG,YAAY,IAAIH,KAAK,CAACG,YAAY,CAACG,MAAM,GAAG,CAAC,CAAC;EAChE;EAEQF,mBAAmBA,CAACG,WAAwB;IAClD,OAAOX,iBAAiB,CAACW,WAAW,CAACC,QAAS,EAAED,WAAW,CAACE,WAAW,CAAC;EAC1E;;AAlCgBX,gBAAA,CAAAY,MAAM,GAAGnB,GAAG;;;;;;;;;GAS3B;AAVUO,gBAAgB,GAAAa,UAAA,EAD5BlB,aAAa,CAAC,wBAAwB,CAAC,C,EAC3BK,gBAAgB,CAoC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}