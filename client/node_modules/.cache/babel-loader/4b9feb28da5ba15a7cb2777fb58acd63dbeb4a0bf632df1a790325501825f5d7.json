{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate, __metadata } from \"tslib\";\nimport { consume, createContext } from '@lit/context';\nimport { property } from 'lit/decorators.js';\nimport { BaseComponent } from '../base/base_component.js';\n/**\n * The context shared by `RouteDataProvider` and `RouteDataConsumer`.\n */\nexport const routeContext = createContext(Symbol('route'));\n/**\n * Base class for components which render route data provided elsewhere; i.e.\n * route building blocks.\n *\n * This class implements functionality to retrieve route data via context from a\n * parent `<gmpx-route-data-provider>` component.\n */\nexport class RouteDataConsumer extends BaseComponent {\n  /**\n   * Returns the `DirectionsRoute` to be used when rendering.\n   *\n   * If a route data object is specified directly on the component as a\n   * property, it will take priority. Otherwise, this method attempts to return\n   * one provided by a parent `<gmpx-route-data-provider>` element.\n   */\n  getRoute() {\n    return this.route ?? this.contextRoute;\n  }\n}\n__decorate([consume({\n  context: routeContext,\n  subscribe: true\n}), property({\n  attribute: false\n}), __metadata(\"design:type\", Object)], RouteDataConsumer.prototype, \"contextRoute\", void 0);\n__decorate([property({\n  attribute: false\n}), __metadata(\"design:type\", Object)], RouteDataConsumer.prototype, \"route\", void 0);","map":{"version":3,"names":["consume","createContext","property","BaseComponent","routeContext","Symbol","RouteDataConsumer","getRoute","route","contextRoute","__decorate","context","subscribe","attribute"],"sources":["/Users/achiladilshan/Desktop/travelmate/client/node_modules/@googlemaps/extended-component-library/src/route_building_blocks/route_data_consumer.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {consume, createContext} from '@lit/context';\nimport {property} from 'lit/decorators.js';\n\nimport {BaseComponent} from '../base/base_component.js';\n\ntype DirectionsRoute = google.maps.DirectionsRoute;\n\n/**\n * The context shared by `RouteDataProvider` and `RouteDataConsumer`.\n */\nexport const routeContext =\n    createContext<DirectionsRoute|undefined>(Symbol('route'));\n\n/**\n * Base class for components which render route data provided elsewhere; i.e.\n * route building blocks.\n *\n * This class implements functionality to retrieve route data via context from a\n * parent `<gmpx-route-data-provider>` component.\n */\nexport abstract class RouteDataConsumer extends BaseComponent {\n  /**\n   * @ignore\n   * Route data passed from a parent `RouteDataProvider` via context.\n   */\n  @consume({context: routeContext, subscribe: true})\n  @property({attribute: false})\n  contextRoute: DirectionsRoute|undefined;\n\n  /**\n   * Route data to render, overriding anything provided by context.\n   */\n  @property({attribute: false}) route?: DirectionsRoute;\n\n  /**\n   * Returns the `DirectionsRoute` to be used when rendering.\n   *\n   * If a route data object is specified directly on the component as a\n   * property, it will take priority. Otherwise, this method attempts to return\n   * one provided by a parent `<gmpx-route-data-provider>` element.\n   */\n  protected getRoute(): DirectionsRoute|undefined {\n    return this.route ?? this.contextRoute;\n  }\n}\n"],"mappings":"AAAA;;;;;;AAMA,SAAQA,OAAO,EAAEC,aAAa,QAAO,cAAc;AACnD,SAAQC,QAAQ,QAAO,mBAAmB;AAE1C,SAAQC,aAAa,QAAO,2BAA2B;AAIvD;;;AAGA,OAAO,MAAMC,YAAY,GACrBH,aAAa,CAA4BI,MAAM,CAAC,OAAO,CAAC,CAAC;AAE7D;;;;;;;AAOA,OAAM,MAAgBC,iBAAkB,SAAQH,aAAa;EAc3D;;;;;;;EAOUI,QAAQA,CAAA;IAChB,OAAO,IAAI,CAACC,KAAK,IAAI,IAAI,CAACC,YAAY;EACxC;;AAhBAC,UAAA,EAFCV,OAAO,CAAC;EAACW,OAAO,EAAEP,YAAY;EAAEQ,SAAS,EAAE;AAAI,CAAC,CAAC,EACjDV,QAAQ,CAAC;EAACW,SAAS,EAAE;AAAK,CAAC,CAAC,E,wFACW;AAKVH,UAAA,EAA7BR,QAAQ,CAAC;EAACW,SAAS,EAAE;AAAK,CAAC,CAAC,E,iFAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}