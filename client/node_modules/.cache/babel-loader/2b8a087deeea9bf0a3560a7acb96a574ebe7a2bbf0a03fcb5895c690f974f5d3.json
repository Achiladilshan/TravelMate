{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate, __metadata } from \"tslib\";\nimport { css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\nimport { GMPX_RATING_COLOR, GMPX_RATING_COLOR_EMPTY } from '../../base/common_styles.js';\nimport { LocalizationController } from '../../base/localization_controller.js';\nimport { PlaceDataConsumer } from '../place_data_consumer.js';\nconst MIN_RATING = 1;\nconst MAX_RATING = 5;\nvar IconType;\n(function (IconType) {\n  IconType[\"FULL\"] = \"full\";\n  IconType[\"HALF\"] = \"half\";\n  IconType[\"EMPTY\"] = \"empty\";\n})(IconType || (IconType = {}));\nfunction toStarIcons(rating) {\n  let numHalfStars = Math.round(rating * 2);\n  const icons = [];\n  while (numHalfStars > 1) {\n    icons.push(IconType.FULL);\n    numHalfStars -= 2;\n  }\n  if (numHalfStars > 0) {\n    icons.push(IconType.HALF);\n  }\n  while (icons.length < MAX_RATING) {\n    icons.push(IconType.EMPTY);\n  }\n  return icons;\n}\n/**\n * Renders a place's star rating in either full (4.9 ★★★★★) or condensed\n * (4.9 ★) form.\n *\n * @cssproperty [--gmpx-rating-color] - Color of the stars in a star\n * rating.\n * @cssproperty [--gmpx-rating-color-empty] - Color of the empty stars\n * in a star rating.\n */\nlet PlaceRating = class PlaceRating extends PlaceDataConsumer {\n  constructor() {\n    super(...arguments);\n    /**\n     * Render a condensed star rating (4.9 ★) instead of the full format\n     * (4.9 ★★★★★).\n     */\n    this.condensed = false;\n    this.getMsg = LocalizationController.buildLocalizer(this);\n  }\n  render() {\n    const rating = this.getRating();\n    return when(rating !== null, () => {\n      const icons = this.condensed ? [IconType.FULL] : toStarIcons(rating);\n      // clang-format off\n      return html`\n        <span role=\"img\" aria-label=${this.getMsg('PLACE_RATING_ARIA_LABEL', rating.toFixed(1))}>\n          <span aria-hidden=\"true\">\n            <span>${rating.toFixed(1)}</span>\n            ${map(icons, iconType => {\n        return html`<span class=\"star-icon ${iconType}\">&#x2605;</span>`;\n      })}\n          </span>\n        </span>\n      `;\n      // clang-format on\n    });\n  }\n  /** @ignore */\n  getRequiredFields() {\n    return ['rating'];\n  }\n  placeHasData(place) {\n    return place.rating != null;\n  }\n  getRating() {\n    const rating = this.getPlace()?.rating;\n    if (!rating || rating < MIN_RATING || rating > MAX_RATING) return null;\n    return rating;\n  }\n};\nPlaceRating.styles = css`\n    .star-icon.full {\n      color: ${GMPX_RATING_COLOR};\n    }\n    .star-icon.empty {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n    }\n    .star-icon.half {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n      position: relative;\n    }\n    .star-icon.half::before {\n      color: ${GMPX_RATING_COLOR};\n      content: '\\\\2605';\n      overflow: hidden;\n      position: absolute;\n      width: 50%;\n    }\n  `;\n__decorate([property({\n  type: Boolean,\n  reflect: true\n}), __metadata(\"design:type\", Object)], PlaceRating.prototype, \"condensed\", void 0);\nPlaceRating = __decorate([customElement('gmpx-place-rating')], PlaceRating);\nexport { PlaceRating };","map":{"version":3,"names":["css","html","customElement","property","map","when","GMPX_RATING_COLOR","GMPX_RATING_COLOR_EMPTY","LocalizationController","PlaceDataConsumer","MIN_RATING","MAX_RATING","IconType","toStarIcons","rating","numHalfStars","Math","round","icons","push","FULL","HALF","length","EMPTY","PlaceRating","constructor","condensed","getMsg","buildLocalizer","render","getRating","toFixed","iconType","getRequiredFields","placeHasData","place","getPlace","styles","__decorate","type","Boolean","reflect"],"sources":["/Users/achiladilshan/Desktop/travelmate/client/node_modules/@googlemaps/extended-component-library/src/place_building_blocks/place_rating/place_rating.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {css, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport {when} from 'lit/directives/when.js';\n\nimport {GMPX_RATING_COLOR, GMPX_RATING_COLOR_EMPTY} from '../../base/common_styles.js';\nimport {LocalizationController} from '../../base/localization_controller.js';\nimport type {Place} from '../../utils/googlemaps_types.js';\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\n\n\nconst MIN_RATING = 1;\nconst MAX_RATING = 5;\n\nenum IconType {\n  FULL = 'full',\n  HALF = 'half',\n  EMPTY = 'empty',\n}\n\nfunction toStarIcons(rating: number): IconType[] {\n  let numHalfStars = Math.round(rating * 2);\n  const icons = [];\n  while (numHalfStars > 1) {\n    icons.push(IconType.FULL);\n    numHalfStars -= 2;\n  }\n  if (numHalfStars > 0) {\n    icons.push(IconType.HALF);\n  }\n  while (icons.length < MAX_RATING) {\n    icons.push(IconType.EMPTY);\n  }\n  return icons;\n}\n\n/**\n * Renders a place's star rating in either full (4.9 ★★★★★) or condensed\n * (4.9 ★) form.\n *\n * @cssproperty [--gmpx-rating-color] - Color of the stars in a star\n * rating.\n * @cssproperty [--gmpx-rating-color-empty] - Color of the empty stars\n * in a star rating.\n */\n@customElement('gmpx-place-rating')\nexport class PlaceRating extends PlaceDataConsumer {\n  static override styles = css`\n    .star-icon.full {\n      color: ${GMPX_RATING_COLOR};\n    }\n    .star-icon.empty {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n    }\n    .star-icon.half {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n      position: relative;\n    }\n    .star-icon.half::before {\n      color: ${GMPX_RATING_COLOR};\n      content: '\\\\2605';\n      overflow: hidden;\n      position: absolute;\n      width: 50%;\n    }\n  `;\n\n  /**\n   * Render a condensed star rating (4.9 ★) instead of the full format\n   * (4.9 ★★★★★).\n   */\n  @property({type: Boolean, reflect: true}) condensed = false;\n\n  protected readonly getMsg = LocalizationController.buildLocalizer(this);\n\n  protected override render() {\n    const rating = this.getRating();\n    return when(rating !== null, () => {\n      const icons = this.condensed ? [IconType.FULL] : toStarIcons(rating!);\n      // clang-format off\n      return html`\n        <span role=\"img\" aria-label=${\n            this.getMsg('PLACE_RATING_ARIA_LABEL', rating!.toFixed(1))}>\n          <span aria-hidden=\"true\">\n            <span>${rating!.toFixed(1)}</span>\n            ${map(icons, (iconType) => {\n              return html`<span class=\"star-icon ${iconType}\">&#x2605;</span>`;\n            })}\n          </span>\n        </span>\n      `;\n      // clang-format on\n    });\n  }\n\n  /** @ignore */\n  getRequiredFields(): Array<keyof Place> {\n    return ['rating'];\n  }\n\n  protected override placeHasData(place: Place): boolean {\n    return (place.rating != null);\n  }\n\n  private getRating(): number|null {\n    const rating = this.getPlace()?.rating;\n    if (!rating || rating < MIN_RATING || rating > MAX_RATING) return null;\n    return rating;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gmpx-place-rating': PlaceRating;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}