{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Controller that handles logging messages to the web console. Components\n * should use this controller rather than calling `console` directly to prepend\n * useful information to the messages.\n */\nexport class LoggingController {\n  constructor(host) {\n    this.host = host;\n    this.host.addController(this);\n  }\n  hostUpdate() {}\n  /** Outputs an informational message to the web console. */\n  info(message, ...data) {\n    console.info(this.formatMessage(message), ...data);\n  }\n  /** Outputs a warning message to the web console. */\n  warn(message, ...data) {\n    console.warn(this.formatMessage(message), ...data);\n  }\n  /** Outputs an error message to the web console. */\n  error(message, ...data) {\n    console.error(this.formatMessage(message), ...data);\n  }\n  /** Returns a formatted message for display in the web console. */\n  formatMessage(message) {\n    return this.prependTagName(message);\n  }\n  prependTagName(message) {\n    return `<${this.host.tagName.toLowerCase()}>: ${message}`;\n  }\n}","map":{"version":3,"names":["LoggingController","constructor","host","addController","hostUpdate","info","message","data","console","formatMessage","warn","error","prependTagName","tagName","toLowerCase"],"sources":["/Users/achiladilshan/Desktop/travelmate/client/node_modules/@googlemaps/extended-component-library/src/base/logging_controller.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {LitElement, ReactiveController, ReactiveControllerHost} from 'lit';\n\n/**\n * Controller that handles logging messages to the web console. Components\n * should use this controller rather than calling `console` directly to prepend\n * useful information to the messages.\n */\nexport class LoggingController implements ReactiveController {\n  constructor(private readonly host: ReactiveControllerHost&LitElement) {\n    this.host.addController(this);\n  }\n\n  hostUpdate() {}\n\n  /** Outputs an informational message to the web console. */\n  info(message: string, ...data: unknown[]) {\n    console.info(this.formatMessage(message), ...data);\n  }\n\n  /** Outputs a warning message to the web console. */\n  warn(message: string, ...data: unknown[]) {\n    console.warn(this.formatMessage(message), ...data);\n  }\n\n  /** Outputs an error message to the web console. */\n  error(message: string, ...data: unknown[]) {\n    console.error(this.formatMessage(message), ...data);\n  }\n\n  /** Returns a formatted message for display in the web console. */\n  formatMessage(message: string) {\n    return this.prependTagName(message);\n  }\n\n  private prependTagName(message: string): string {\n    return `<${this.host.tagName.toLowerCase()}>: ${message}`;\n  }\n}\n"],"mappings":"AAAA;;;;;AAQA;;;;;AAKA,OAAM,MAAOA,iBAAiB;EAC5BC,YAA6BC,IAAuC;IAAvC,KAAAA,IAAI,GAAJA,IAAI;IAC/B,IAAI,CAACA,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC;EAC/B;EAEAC,UAAUA,CAAA,GAAI;EAEd;EACAC,IAAIA,CAACC,OAAe,EAAE,GAAGC,IAAe;IACtCC,OAAO,CAACH,IAAI,CAAC,IAAI,CAACI,aAAa,CAACH,OAAO,CAAC,EAAE,GAAGC,IAAI,CAAC;EACpD;EAEA;EACAG,IAAIA,CAACJ,OAAe,EAAE,GAAGC,IAAe;IACtCC,OAAO,CAACE,IAAI,CAAC,IAAI,CAACD,aAAa,CAACH,OAAO,CAAC,EAAE,GAAGC,IAAI,CAAC;EACpD;EAEA;EACAI,KAAKA,CAACL,OAAe,EAAE,GAAGC,IAAe;IACvCC,OAAO,CAACG,KAAK,CAAC,IAAI,CAACF,aAAa,CAACH,OAAO,CAAC,EAAE,GAAGC,IAAI,CAAC;EACrD;EAEA;EACAE,aAAaA,CAACH,OAAe;IAC3B,OAAO,IAAI,CAACM,cAAc,CAACN,OAAO,CAAC;EACrC;EAEQM,cAAcA,CAACN,OAAe;IACpC,OAAO,IAAI,IAAI,CAACJ,IAAI,CAACW,OAAO,CAACC,WAAW,EAAE,MAAMR,OAAO,EAAE;EAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}