{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { __decorate, __metadata } from \"tslib\";\nimport { css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\nimport { getTypeScaleSizeFromPx, GMPX_BORDER_SEPARATOR, GMPX_COLOR_ON_SURFACE, GMPX_COLOR_ON_SURFACE_VARIANT, GMPX_FONT_BODY, GMPX_FONT_CAPTION, GMPX_FONT_TITLE_MEDIUM, GMPX_RATING_COLOR, GMPX_RATING_COLOR_EMPTY } from '../../base/common_styles.js';\nimport { LocalizationController } from '../../base/localization_controller.js';\nimport { WebFont, WebFontController } from '../../base/web_font_controller.js';\nimport { PlaceDataConsumer } from '../place_data_consumer.js';\nconst MAX_RATING = 5;\nvar IconType;\n(function (IconType) {\n  IconType[\"FULL\"] = \"full\";\n  IconType[\"EMPTY\"] = \"empty\";\n})(IconType || (IconType = {}));\nfunction toStarIcons(rating) {\n  return Array.from({\n    length: MAX_RATING\n  }).fill(IconType.FULL, 0, rating).fill(IconType.EMPTY, rating);\n}\n/**\n * Renders a list of user-generated place reviews.\n *\n * Reviews are displayed in an order corresponding to the default behavior of\n * the [Place\n * API](https://developers.google.com/maps/documentation/javascript/reference/place#Place).\n *\n * @cssproperty [--gmpx-rating-color] - Color of the star rating icons\n * when filled.\n * @cssproperty [--gmpx-rating-color-empty] - Color of the star rating\n * icons when empty.\n * @cssproperty [--gmpx-color-outline] - Divider color.\n */\nlet PlaceReviews = class PlaceReviews extends PlaceDataConsumer {\n  constructor() {\n    super(...arguments);\n    this.fontLoader = new WebFontController(this, [WebFont.GOOGLE_SANS_TEXT]);\n    this.getMsg = LocalizationController.buildLocalizer(this);\n  }\n  render() {\n    const reviews = this.getReviews();\n    return when(reviews && reviews.length, () => html`\n      <div class=\"container\">\n        ${map(reviews, this.renderOneReview.bind(this))}\n      </div>\n    `);\n  }\n  /** @ignore */\n  getRequiredFields() {\n    return ['reviews'];\n  }\n  placeHasData(place) {\n    return !!(place.reviews && place.reviews.length > 0);\n  }\n  renderOneReview(review) {\n    const attribution = review.authorAttribution;\n    const header = html`\n      <div class=\"header\">\n        ${when(attribution?.photoURI, () => html`\n          <a target=\"_blank\" href=\"${attribution?.uri ?? ''}\">\n            <img class=\"author-photo\"\n                alt=${this.getMsg('PLACE_REVIEWS_AUTHOR_PHOTO_ALT', attribution?.displayName ?? '')}\n                src=${attribution.photoURI}>\n          </a>\n        `)}\n        <a class=\"author-name\"\n          target=\"_blank\"\n          href=\"${attribution?.uri ?? ''}\">\n          ${attribution?.displayName ?? ''}\n        </a>\n      </div>\n    `;\n    // clang-format off\n    const subheader = html`\n      <div class=\"subheader\">\n        ${when(review.rating, () => html`\n          <span role=\"img\" aria-label=${this.getMsg('PLACE_RATING_ARIA_LABEL', review.rating)}>\n            <span aria-hidden=\"true\">\n              ${map(toStarIcons(review.rating), iconType => {\n      return html`<span class=\"star-icon ${iconType}\">&#x2605;</span>`;\n    })}\n            </span>\n          </span>\n        `)}\n        <span class=\"relative-time\">\n          ${review.relativePublishTimeDescription ?? ''}\n        </span>\n      </div>\n    `;\n    // clang-format on\n    return html`\n      <div class=\"review\">\n        ${header}\n        ${subheader}\n        ${when(review.text, () => html`\n          <div class=\"body\">\n            ${review.text}\n          </div>\n        `)}\n      </div>\n    `;\n  }\n  getReviews() {\n    const reviews = this.getPlace()?.reviews;\n    if (!reviews) return null;\n    if (this.maxReviews === undefined) return reviews;\n    if (this.maxReviews < 1) return null;\n    return reviews.slice(0, Math.floor(this.maxReviews));\n  }\n};\nPlaceReviews.styles = css`\n    .container {\n      color: ${GMPX_COLOR_ON_SURFACE};\n      font: ${GMPX_FONT_BODY};\n    }\n    .review {\n      padding: ${getTypeScaleSizeFromPx(20)};\n      padding-bottom: ${getTypeScaleSizeFromPx(16)};\n    }\n    .review:not(:last-child) {\n      border-bottom: ${GMPX_BORDER_SEPARATOR};\n    }\n    .header, .subheader {\n      align-items: center;\n      display: flex;\n    }\n    .subheader {\n      margin-top: ${getTypeScaleSizeFromPx(16)};\n    }\n    .body {\n      margin-top: ${getTypeScaleSizeFromPx(8)};\n    }\n    .author-photo {\n      display: block;\n      height: ${getTypeScaleSizeFromPx(32)};\n    }\n    .author-name {\n      color: inherit;\n      font: ${GMPX_FONT_TITLE_MEDIUM};\n      margin-inline-start: ${getTypeScaleSizeFromPx(8)};\n      text-decoration: none;\n    }\n    .author-name:hover {\n      text-decoration: underline;\n    }\n    .star-icon.full {\n      color: ${GMPX_RATING_COLOR};\n    }\n    .star-icon.empty {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n    }\n    .relative-time {\n      color: ${GMPX_COLOR_ON_SURFACE_VARIANT};\n      font: ${GMPX_FONT_CAPTION};\n      margin-inline-start: ${getTypeScaleSizeFromPx(12)};\n    }\n  `;\n__decorate([property({\n  type: Number,\n  reflect: true,\n  attribute: 'max-reviews'\n}), __metadata(\"design:type\", Number)], PlaceReviews.prototype, \"maxReviews\", void 0);\nPlaceReviews = __decorate([customElement('gmpx-place-reviews')], PlaceReviews);\nexport { PlaceReviews };","map":{"version":3,"names":["css","html","customElement","property","map","when","getTypeScaleSizeFromPx","GMPX_BORDER_SEPARATOR","GMPX_COLOR_ON_SURFACE","GMPX_COLOR_ON_SURFACE_VARIANT","GMPX_FONT_BODY","GMPX_FONT_CAPTION","GMPX_FONT_TITLE_MEDIUM","GMPX_RATING_COLOR","GMPX_RATING_COLOR_EMPTY","LocalizationController","WebFont","WebFontController","PlaceDataConsumer","MAX_RATING","IconType","toStarIcons","rating","Array","from","length","fill","FULL","EMPTY","PlaceReviews","constructor","fontLoader","GOOGLE_SANS_TEXT","getMsg","buildLocalizer","render","reviews","getReviews","renderOneReview","bind","getRequiredFields","placeHasData","place","review","attribution","authorAttribution","header","photoURI","uri","displayName","subheader","iconType","relativePublishTimeDescription","text","getPlace","maxReviews","undefined","slice","Math","floor","styles","__decorate","type","Number","reflect","attribute"],"sources":["/Users/achiladilshan/Desktop/travelmate/client/node_modules/@googlemaps/extended-component-library/src/place_building_blocks/place_reviews/place_reviews.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {css, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {map} from 'lit/directives/map.js';\nimport {when} from 'lit/directives/when.js';\n\nimport {getTypeScaleSizeFromPx, GMPX_BORDER_SEPARATOR, GMPX_COLOR_ON_SURFACE, GMPX_COLOR_ON_SURFACE_VARIANT, GMPX_FONT_BODY, GMPX_FONT_CAPTION, GMPX_FONT_TITLE_MEDIUM, GMPX_RATING_COLOR, GMPX_RATING_COLOR_EMPTY} from '../../base/common_styles.js';\nimport {LocalizationController} from '../../base/localization_controller.js';\nimport {WebFont, WebFontController} from '../../base/web_font_controller.js';\nimport type {Place, Review} from '../../utils/googlemaps_types.js';\nimport {PlaceDataConsumer} from '../place_data_consumer.js';\n\nconst MAX_RATING = 5;\n\nenum IconType {\n  FULL = 'full',\n  EMPTY = 'empty',\n}\n\nfunction toStarIcons(rating: number): IconType[] {\n  return Array.from<IconType>({length: MAX_RATING})\n      .fill(IconType.FULL, 0, rating)\n      .fill(IconType.EMPTY, rating);\n}\n\n/**\n * Renders a list of user-generated place reviews.\n *\n * Reviews are displayed in an order corresponding to the default behavior of\n * the [Place\n * API](https://developers.google.com/maps/documentation/javascript/reference/place#Place).\n *\n * @cssproperty [--gmpx-rating-color] - Color of the star rating icons\n * when filled.\n * @cssproperty [--gmpx-rating-color-empty] - Color of the star rating\n * icons when empty.\n * @cssproperty [--gmpx-color-outline] - Divider color.\n */\n@customElement('gmpx-place-reviews')\nexport class PlaceReviews extends PlaceDataConsumer {\n  static override styles = css`\n    .container {\n      color: ${GMPX_COLOR_ON_SURFACE};\n      font: ${GMPX_FONT_BODY};\n    }\n    .review {\n      padding: ${getTypeScaleSizeFromPx(20)};\n      padding-bottom: ${getTypeScaleSizeFromPx(16)};\n    }\n    .review:not(:last-child) {\n      border-bottom: ${GMPX_BORDER_SEPARATOR};\n    }\n    .header, .subheader {\n      align-items: center;\n      display: flex;\n    }\n    .subheader {\n      margin-top: ${getTypeScaleSizeFromPx(16)};\n    }\n    .body {\n      margin-top: ${getTypeScaleSizeFromPx(8)};\n    }\n    .author-photo {\n      display: block;\n      height: ${getTypeScaleSizeFromPx(32)};\n    }\n    .author-name {\n      color: inherit;\n      font: ${GMPX_FONT_TITLE_MEDIUM};\n      margin-inline-start: ${getTypeScaleSizeFromPx(8)};\n      text-decoration: none;\n    }\n    .author-name:hover {\n      text-decoration: underline;\n    }\n    .star-icon.full {\n      color: ${GMPX_RATING_COLOR};\n    }\n    .star-icon.empty {\n      color: ${GMPX_RATING_COLOR_EMPTY};\n    }\n    .relative-time {\n      color: ${GMPX_COLOR_ON_SURFACE_VARIANT};\n      font: ${GMPX_FONT_CAPTION};\n      margin-inline-start: ${getTypeScaleSizeFromPx(12)};\n    }\n  `;\n\n  /**\n   * The maximum number of reviews to display. If undefined, displays all\n   * reviews returned by the Places API, which provides at most 5.\n   */\n  @property({type: Number, reflect: true, attribute: 'max-reviews'})\n  maxReviews?: number;\n\n  protected readonly fontLoader =\n      new WebFontController(this, [WebFont.GOOGLE_SANS_TEXT]);\n\n  protected readonly getMsg = LocalizationController.buildLocalizer(this);\n\n  protected override render() {\n    const reviews = this.getReviews();\n    return when(reviews && reviews.length, () => html`\n      <div class=\"container\">\n        ${map(reviews!, this.renderOneReview.bind(this))}\n      </div>\n    `);\n  }\n\n  /** @ignore */\n  getRequiredFields(): Array<keyof Place> {\n    return ['reviews'];\n  }\n\n  protected override placeHasData(place: Place): boolean {\n    return !!(place.reviews && place.reviews.length > 0);\n  }\n\n  private renderOneReview(review: Review) {\n    const attribution = review.authorAttribution;\n    const header = html`\n      <div class=\"header\">\n        ${\n        when(\n            attribution?.photoURI,\n            () => html`\n          <a target=\"_blank\" href=\"${attribution?.uri ?? ''}\">\n            <img class=\"author-photo\"\n                alt=${\n                this.getMsg(\n                    'PLACE_REVIEWS_AUTHOR_PHOTO_ALT',\n                    attribution?.displayName ?? '')}\n                src=${attribution!.photoURI!}>\n          </a>\n        `)}\n        <a class=\"author-name\"\n          target=\"_blank\"\n          href=\"${attribution?.uri ?? ''}\">\n          ${attribution?.displayName ?? ''}\n        </a>\n      </div>\n    `;\n\n    // clang-format off\n    const subheader = html`\n      <div class=\"subheader\">\n        ${when(review.rating, () => html`\n          <span role=\"img\" aria-label=${\n              this.getMsg('PLACE_RATING_ARIA_LABEL', review.rating!)}>\n            <span aria-hidden=\"true\">\n              ${map(toStarIcons(review.rating!), (iconType) => {\n                return html`<span class=\"star-icon ${iconType}\">&#x2605;</span>`;\n              })}\n            </span>\n          </span>\n        `)}\n        <span class=\"relative-time\">\n          ${review.relativePublishTimeDescription ?? ''}\n        </span>\n      </div>\n    `;\n    // clang-format on\n\n    return html`\n      <div class=\"review\">\n        ${header}\n        ${subheader}\n        ${when(review.text, () => html`\n          <div class=\"body\">\n            ${review.text}\n          </div>\n        `)}\n      </div>\n    `;\n  }\n\n  private getReviews(): Review[]|null {\n    const reviews = this.getPlace()?.reviews;\n    if (!reviews) return null;\n    if (this.maxReviews === undefined) return reviews;\n    if (this.maxReviews < 1) return null;\n    return reviews.slice(0, Math.floor(this.maxReviews));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'gmpx-place-reviews': PlaceReviews;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}